name: MCU Setup Scripts Test

on:
  push:
    paths:
      - 'bootstrap_mcu_prereq.sh'
      - 'setup_mcu_env.sh'
      - '.github/workflows/test-mcu-setup.yml'
  pull_request:
    paths:
      - 'bootstrap_mcu_prereq.sh'
      - 'setup_mcu_env.sh'
  workflow_dispatch:

jobs:
  test-ubuntu-2404:
    name: Test on Ubuntu 24.04
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Make scripts executable
      run: |
        chmod +x bootstrap_mcu_prereq.sh
        chmod +x setup_mcu_env.sh
    
    - name: Run bootstrap script
      run: |
        ./bootstrap_mcu_prereq.sh
      
    - name: Run main setup script
      run: |
        ./setup_mcu_env.sh
    
    - name: Verify installations
      run: |
        echo "=== Verification Results ==="
        echo "GCC: $(gcc --version | head -n1)"
        echo "Git: $(git --version)"
        echo "CMake: $(cmake --version | head -n1)"
        echo "Python3: $(python3 --version)"
        echo "ARM GCC: $(arm-none-eabi-gcc --version | head -n1 || echo 'Not found')"
        echo "OpenOCD: $(openocd --version 2>&1 | head -n1 || echo 'Not found')"
        
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: installation-logs
        path: troubleshoot/

  test-ubuntu-2204:
    name: Test on Ubuntu 22.04 (compatibility)
    runs-on: ubuntu-22.04
    continue-on-error: true
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Make scripts executable
      run: |
        chmod +x bootstrap_mcu_prereq.sh
        chmod +x setup_mcu_env.sh
    
    - name: Run scripts
      run: |
        ./bootstrap_mcu_prereq.sh
        ./setup_mcu_env.sh || true
        
    - name: Check results
      run: |
        echo "Compatibility test completed" 